{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\asi2\\\\Asi2_Atelier1_Git\\\\asi2-card-trading-game\\\\frontend-react\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Header, Button } from 'semantic-ui-react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Auth = props => {\n  _s();\n  const [currentUser, setCurrentUser] = useState({\n    // id:\"\",\n    // surname:\"\",\n    // lastname:\"\",\n    // img:\"\",\n    username: \"\",\n    password: \"\"\n    // money:0,\n  });\n\n  function processInput(event, _ref) {\n    let {\n      valueData\n    } = _ref;\n    // A chaque fois qu'on input qqch dans le formulaire on appelle cette fonction\n    // Ici normalement on travaille sur un user donc on le créé vide et on rajoute ses détails\n    const target = event.currentTarget;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    // let currentVal=currentUser;\n    setCurrentUser({\n      ...currentUser,\n      [name]: value\n    });\n    // currentVal[name]= value;\n    // props.handleChange(currentVal);\n  }\n  ;\n  const navigate = useNavigate();\n  let userID;\n  function submitOrder(data) {\n    props.submitUserHandler(data);\n    console.log(currentUser);\n    fetch('/auth', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(currentUser)\n    }).then(response => {\n      if (response.status == 403) {\n        throw new Error('Invalid credentials');\n      } else if (response.status == 200) {\n        return response.json();\n      }\n    }).then(response => {\n      console.log(\"Auth Success, userID : \" + response);\n      userID = response;\n      getUser;\n      navigate('/home');\n    }).catch(error => alert(error));\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h4\",\n      dividing: true,\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Login\",\n        placeholder: \"Login\",\n        onChange: processInput,\n        name: \"username\",\n        value: currentUser.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Form.Input, {\n        type: \"password\",\n        label: \"Pwd\",\n        placeholder: \"password\",\n        onChange: processInput,\n        name: \"password\",\n        value: currentUser.pwd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      onClick: submitOrder,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Auth, \"dMHDW+hdq0vT7vNVdqFTZzyUJJU=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","Form","Header","Button","useNavigate","Auth","props","currentUser","setCurrentUser","username","password","processInput","event","valueData","target","currentTarget","value","type","checked","name","navigate","userID","submitOrder","data","submitUserHandler","console","log","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","getUser","catch","error","alert","login","pwd"],"sources":["C:/Users/asus/Desktop/asi2/Asi2_Atelier1_Git/asi2-card-trading-game/frontend-react/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Header,Button } from 'semantic-ui-react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const Auth = (props) =>{\r\n       const [currentUser,setCurrentUser]= useState({\r\n                                            // id:\"\",\r\n                                            // surname:\"\",\r\n                                            // lastname:\"\",\r\n                                            // img:\"\",\r\n                                            username:\"\",\r\n                                            password:\"\",\r\n                                            // money:0,\r\n\r\n                                        });\r\n\r\n    function processInput(event, { valueData }){\r\n        // A chaque fois qu'on input qqch dans le formulaire on appelle cette fonction\r\n        // Ici normalement on travaille sur un user donc on le créé vide et on rajoute ses détails\r\n        const target = event.currentTarget;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        // let currentVal=currentUser;\r\n        setCurrentUser({...currentUser, [name]: value});\r\n        // currentVal[name]= value;\r\n        // props.handleChange(currentVal);\r\n    };\r\n    const navigate = useNavigate();\r\n    let userID;\r\n\r\n    function submitOrder(data){\r\n        props.submitUserHandler(data);\r\n        console.log(currentUser);\r\n        fetch('/auth',{\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(currentUser)\r\n          })\r\n        .then(response => {\r\n            if (response.status == 403){throw new Error('Invalid credentials');}\r\n            else if (response.status == 200) {return response.json()}\r\n            })\r\n        .then((response) => {\r\n            console.log(\"Auth Success, userID : \"+response)\r\n            userID = response\r\n            getUser\r\n            navigate('/home')\r\n        })\r\n        .catch(error => alert(error))\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Form>\r\n            <Header as='h4' dividing>\r\n                User Login\r\n            </Header>\r\n            <Form.Field>\r\n                <Form.Input label=\"Login\" placeholder=\"Login\" onChange={processInput}  name=\"username\" value={currentUser.login}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <Form.Input type=\"password\" label=\"Pwd\" placeholder=\"password\" onChange={processInput}  name=\"password\" value={currentUser.pwd}/>\r\n            </Form.Field>\r\n            <Button type='button' onClick={submitOrder}>Login</Button>\r\n        </Form>\r\n\r\n    );\r\n    \r\n    }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}